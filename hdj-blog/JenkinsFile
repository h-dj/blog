pipeline {
    agent any
    stages {
        stage('拉取代码') {
            steps {
                echo "开始拉取代码: 位置：${WORKSPACE}"
                 script {
                        try {
                             sh """
                                    git clone git@github.com:h-dj/blog.git
                                    cd ${WORKSPACE}/blog
                                    git checkout develop
                                    git branch
                                """
                        } catch (Exception err) {
                            sh """
                                cd ${WORKSPACE}/blog
                                git pull
                                git branch
                            """
                        }
                }
                echo "开始拉取代码: 完成 "
            }
        }
        stage('构建jar包') {
            steps {
                sh  """
                    cd ${WORKSPACE}/blog/hdj-blog
                    ${MAVEN_HOME}/bin/mvn -DskipTests=true clean package -P prod_lib
                    ls -l ./target
                    """
            }
        }
        stage('发送至指定服务器') {
                     steps {
                          sh 'date'
                          echo "项目构建结果路径：${WORKSPACE}"
                          sh """
                             cd ${WORKSPACE}/blog/hdj-blog
                             rsync -vcr --progress -e 'ssh -p ${port}' ./target/hdj-blog-0.0.1-SNAPSHOT.jar ./target/lib ./Dockerfile   ${user}@${host}:/home/blog/blog/app
                             """
                          echo '发送成功'
                       }
               }
        stage('项目启动') {
                    input {
                                message "是否要启动项目？"
                                ok "yes,continue"
                                submitter "suc"
                           }
                     steps {
                          sh """
                            ssh ${user}@${host} -p 22022 docker-compose -f /home/blog/blog/docker-compose.yaml up -d --build
                            ssh ${user}@${host} -p 22022 docker logs -f blog-api
                          """
                       }
                     }

    }
    post {
            success {
                echo 'success'
            }
            unstable {
                echo 'I am unstable :/'
            }
            failure {
                echo 'failed'
            }
            changed {
                echo 'Things were different before...'
            }
        }
}